components:
  schemas:
    EventDetails:
      description: Details for publishing events.
      properties:
        headers:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          description: The headers for the event.
          title: Headers
        key:
          description: The key of the event.
          title: Key
          type: string
        payload:
          additionalProperties:
            type: string
          description: The value of the event.
          title: Payload
          type: object
        topic:
          description: The topic to publish the event to.
          title: Topic
          type: string
        type_:
          description: The type of the event.
          title: Type
          type: string
      required:
      - payload
      - topic
      - type_
      - key
      title: EventDetails
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    UpsertionDetails:
      description: Details for upserting documents in a collection.
      properties:
        documents:
          anyOf:
          - additionalProperties: true
            type: object
          - items:
              additionalProperties: true
              type: object
            type: array
          description: The document(s) to upsert.
          title: Documents
        id_field:
          default: _id
          description: The field to use as the document id.
          title: Id Field
          type: string
      required:
      - documents
      title: UpsertionDetails
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
info:
  description: A service for basic infrastructure technology state management.
  title: State Management Service
  version: 4.0.1
openapi: 3.1.0
paths:
  /documents/permissions:
    get:
      description: Returns the configured db permissions list.
      operationId: get_db_permissions
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Get Db Permissions
                type: array
          description: Successful Response
      summary: Returns the configured db permissions list.
      tags:
      - StateManagementService
      - sms-mongodb
  /documents/{namespace}:
    delete:
      description: No error is raised if the db or collection do not exist.
      operationId: delete_documents
      parameters:
      - description: 'The database and collection to query. Format: db_name.collection'
        in: path
        name: namespace
        required: true
        schema:
          description: 'The database and collection to query. Format: db_name.collection'
          examples:
          - my_test_db.users
          pattern: ^(?P<db>[^.\\/\s\"$]{1,64})\.(?P<collection>[^$]{1,255})$
          title: Namespace
          type: string
      - description: Query parameters used to specify the documents affected by the
          request.
        in: query
        name: criteria
        required: false
        schema:
          additionalProperties: true
          description: Query parameters used to specify the documents affected by
            the request.
          examples:
          - '{"name": "John"}'
          - '{"_id": {"$ne": "507f1f77bcf86cd799439011"}}'
          - '{"age": {"$gt": 21}}'
          title: Criteria
          type: object
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Deletes all or some documents in the collection.
      tags:
      - StateManagementService
      - sms-mongodb
    get:
      description: Returns all or some documents from the specified collection.
      operationId: get_documents
      parameters:
      - description: 'The database and collection to query. Format: db_name.collection'
        in: path
        name: namespace
        required: true
        schema:
          description: 'The database and collection to query. Format: db_name.collection'
          examples:
          - my_test_db.users
          pattern: ^(?P<db>[^.\\/\s\"$]{1,64})\.(?P<collection>[^$]{1,255})$
          title: Namespace
          type: string
      - description: Query parameters used to specify the documents affected by the
          request.
        in: query
        name: criteria
        required: false
        schema:
          additionalProperties: true
          description: Query parameters used to specify the documents affected by
            the request.
          examples:
          - '{"name": "John"}'
          - '{"_id": {"$ne": "507f1f77bcf86cd799439011"}}'
          - '{"age": {"$gt": 21}}'
          title: Criteria
          type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                title: Response Get Documents
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Returns all or some documents from the specified collection.
      tags:
      - StateManagementService
      - sms-mongodb
    put:
      description: Upserts the document(s) provided in the request body in the specified
        collection.
      operationId: upsert_documents
      parameters:
      - description: 'The database and collection to query. Format: db_name.collection'
        in: path
        name: namespace
        required: true
        schema:
          description: 'The database and collection to query. Format: db_name.collection'
          examples:
          - my_test_db.users
          pattern: ^(?P<db>[^.\\/\s\"$]{1,64})\.(?P<collection>[^$]{1,255})$
          title: Namespace
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertionDetails'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upserts the document(s) provided in the request body in thespecified
        collection.
      tags:
      - StateManagementService
      - sms-mongodb
  /events/:
    delete:
      description: If no topics are specified, all topics will be cleared, except
        internal topics unless otherwise specified.
      operationId: clear_topics
      parameters:
      - description: The topic(s) to clear.
        in: query
        name: topics
        required: false
        schema:
          default: []
          description: The topic(s) to clear.
          items:
            type: string
          title: Topics
          type: array
      - description: Whether to exclude internal topics.
        in: query
        name: exclude_internal
        required: false
        schema:
          default: true
          description: Whether to exclude internal topics.
          title: Exclude Internal
          type: boolean
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Clear events from the given topic(s).
      tags:
      - StateManagementService
      - sms-kafka
    post:
      description: 'Publish the event provided in the request body to the given topic.


        Args:

        - `events_handler`: The events handler to use.


        Raises:

        - `HTTPException`: If an error occurs.'
      operationId: publish_event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetails'
        required: true
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Publish the event provided in the request body to the given topic.
      tags:
      - StateManagementService
      - sms-kafka
  /health:
    get:
      description: Used to test if this service is alive
      operationId: health
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: health
      tags:
      - StateManagementService
      - health
  /objects/{alias}/{bucket_id}:
    delete:
      description: Delete all objects in the specified bucket.
      operationId: empty_bucket
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - in: path
        name: bucket_id
        required: true
        schema:
          title: Bucket Id
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete all objects in the specified bucket.
      tags:
      - StateManagementService
      - sms-s3
    get:
      description: Return a list of the objects that currently exist in the S3 bucket.
      operationId: get_objects
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - in: path
        name: bucket_id
        required: true
        schema:
          title: Bucket Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Get Objects
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List all objects in the specified bucket.
      tags:
      - StateManagementService
      - sms-s3
  /objects/{alias}/{bucket_id}/{object_id}:
    get:
      description: Return boolean indicating whether or not the object exists in the
        given bucket.
      operationId: check_object_exists
      parameters:
      - in: path
        name: alias
        required: true
        schema:
          title: Alias
          type: string
      - in: path
        name: bucket_id
        required: true
        schema:
          title: Bucket Id
          type: string
      - in: path
        name: object_id
        required: true
        schema:
          title: Object Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                title: Response Check Object Exists
                type: boolean
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Check if an object exists in the specified bucket.
      tags:
      - StateManagementService
      - sms-s3
  /secrets/{vault_path}:
    delete:
      description: Delete all secrets from the specified vault.
      operationId: delete_secrets
      parameters:
      - in: path
        name: vault_path
        required: true
        schema:
          description: The path to the vault
          examples:
          - ekss
          - sms
          title: Vault Path
          type: string
      responses:
        '204':
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete all secrets from the specified vault.
      tags:
      - StateManagementService
      - sms-vault
    get:
      description: Returns a list of secrets in the specified vault
      operationId: get_secrets
      parameters:
      - in: path
        name: vault_path
        required: true
        schema:
          description: The path to the vault
          examples:
          - ekss
          - sms
          title: Vault Path
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Get Secrets
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Returns a list of secrets in the vault
      tags:
      - StateManagementService
      - sms-vault
tags:
- name: StateManagementService
